{"version":3,"sources":["api/goods.js","components/GoodsList/GoodsList.js","components/Button/Button.js","App.js","index.js"],"names":["getAll","fetch","then","response","ok","Error","status","statusText","json","get5First","goods","sort","a","b","name","localeCompare","slice","getRed","filter","good","color","GoodsList","className","map","key","id","style","Button","handleClick","isLoading","type","onClick","classNames","App","state","isInitialized","loadGoods","loadCallback","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mRAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAMC,EAAY,kBAAMT,IAC5BE,MAAK,SAAAQ,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAEDC,EAAS,kBAAMjB,IACzBE,MAAK,SAAAQ,GAAK,OAAIA,EACZQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aClBZC,EAAY,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACvB,wBACEY,UAAU,iBAGRZ,EAAMa,KAAI,SAAAJ,GAAI,OACZ,wBACEK,IAAKL,EAAKM,GACVC,MAAO,CAAEN,MAAOD,EAAKC,QAEpBD,EAAKL,W,gBCTHa,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAad,EAAhB,EAAgBA,KAAMe,EAAtB,EAAsBA,UAAtB,OACpB,4BACEC,KAAK,SACLC,QAASH,EACTN,UAAWU,IAAW,SAAU,UAAW,MAAO,CAChD,aAAcH,KAGff,ICyCUmB,E,4MA9CbC,MAAQ,CACNxB,MAAO,GACPyB,eAAe,EACfN,WAAW,G,EAGbO,U,uCAAY,WAAMC,GAAN,eAAAzB,EAAA,6DACV,EAAK0B,SAAS,CACZT,WAAW,IAFH,SAKUQ,IALV,OAKJ3B,EALI,OAOV,EAAK4B,SAAS,CACZ5B,QACAyB,eAAe,EACfN,WAAW,IAVH,2C,6GAcF,IAAD,SACqCU,KAAKL,MAAzCxB,EADD,EACCA,MAAOyB,EADR,EACQA,cAAeN,EADvB,EACuBA,UAE9B,OACE,oCACE,kBAAC,EAAD,CACED,YAAa,kBAAM,EAAKQ,UAAUpC,IAClCc,KAAK,iBACLe,UAAWA,IAEb,kBAAC,EAAD,CACED,YAAa,kBAAM,EAAKQ,UAAU3B,IAClCK,KAAK,qBACLe,UAAWA,IAEb,kBAAC,EAAD,CACED,YAAa,kBAAM,EAAKQ,UAAUnB,IAClCH,KAAK,iBACLe,UAAWA,IAEZM,GAAkB,kBAAC,EAAD,CAAWzB,MAAOA,S,GAzC3B8B,IAAMC,WCFxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f3f604be.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => getAll()\n  .then(goods => goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5));\n\nexport const getRed = () => getAll()\n  .then(goods => goods\n    .filter(good => good.color === 'red'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul\n    className=\"container box\"\n  >\n    {\n      goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))\n    }\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      color: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Button = ({ handleClick, name, isLoading }) => (\n  <button\n    type=\"button\"\n    onClick={handleClick}\n    className={classNames('button', 'is-info', 'm-2', {\n      'is-loading': isLoading,\n    })}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button/Button';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    isInitialized: false,\n    isLoading: false,\n  }\n\n  loadGoods = async(loadCallback) => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const goods = await loadCallback();\n\n    this.setState({\n      goods,\n      isInitialized: true,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { goods, isInitialized, isLoading } = this.state;\n\n    return (\n      <>\n        <Button\n          handleClick={() => this.loadGoods(getAll)}\n          name=\"Load all goods\"\n          isLoading={isLoading}\n        />\n        <Button\n          handleClick={() => this.loadGoods(get5First)}\n          name=\"Load 5 first goods\"\n          isLoading={isLoading}\n        />\n        <Button\n          handleClick={() => this.loadGoods(getRed)}\n          name=\"Load red goods\"\n          isLoading={isLoading}\n        />\n        {isInitialized && (<GoodsList goods={goods} />)}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}